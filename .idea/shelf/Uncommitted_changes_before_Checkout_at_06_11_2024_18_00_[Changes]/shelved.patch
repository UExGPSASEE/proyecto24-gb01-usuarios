Index: src/main/java/es/unex/swagger/api/ProfilesApiController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.swagger.api;\r\n\r\n\r\nimport es.unex.asee.gb01.contents.Entities.PerfilUsuarioEntity;\r\nimport es.unex.asee.gb01.contents.Entities.UserEntity;\r\nimport es.unex.asee.gb01.contents.Mappers.PerfilUsuarioMapper;\r\nimport es.unex.asee.gb01.contents.Mappers.UserMapper;\r\nimport es.unex.asee.gb01.contents.repositories.PerfilUsuarioRepository;\r\nimport es.unex.swagger.model.PerfilUsuario;\r\nimport es.unex.swagger.model.User;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport io.swagger.v3.oas.annotations.Operation;\r\nimport io.swagger.v3.oas.annotations.Parameter;\r\nimport io.swagger.v3.oas.annotations.enums.ParameterIn;\r\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;\r\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\r\nimport io.swagger.v3.oas.annotations.media.ArraySchema;\r\nimport io.swagger.v3.oas.annotations.media.Content;\r\nimport io.swagger.v3.oas.annotations.media.Schema;\r\nimport io.swagger.v3.oas.annotations.security.SecurityRequirement;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport org.springframework.web.bind.annotation.CookieValue;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestHeader;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.RequestPart;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport javax.validation.Valid;\r\nimport javax.validation.constraints.*;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n@javax.annotation.Generated(value = \"io.swagger.codegen.v3.generators.java.SpringCodegen\", date = \"2024-10-18T10:29:32.211856553Z[GMT]\")\r\n@RestController\r\npublic class ProfilesApiController implements ProfilesApi {\r\n\r\n    private final PerfilUsuarioMapper perfilUsuarioMapper;\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(ProfilesApiController.class);\r\n\r\n    private final ObjectMapper objectMapper;\r\n\r\n    private final HttpServletRequest request;\r\n\r\n    @Autowired\r\n    private PerfilUsuarioRepository perfilUsuarioRepository;\r\n\r\n    @org.springframework.beans.factory.annotation.Autowired\r\n    public ProfilesApiController(ObjectMapper objectMapper, HttpServletRequest request) {\r\n        this.objectMapper = objectMapper;\r\n        this.request = request;\r\n    }\r\n\r\n    public ResponseEntity<PerfilUsuario> deleteUserProfileById(@Parameter(in = ParameterIn.PATH, description = \"El id del perfil de usuario que se desea eliminar.\", required=true, schema=@Schema()) @PathVariable(\"idProfile\") Long idProfile\r\n,\r\n@Parameter(in = ParameterIn.COOKIE, description = \"\" ,required=true,schema=@Schema()) @CookieValue(value=\"SessionUserCookie\", required=true) User sessionUserCookie) {\r\n        String accept = request.getHeader(\"Accept\");\r\n        if (accept != null && accept.contains(\"application/json\")) {\r\n            try {\r\n                PerfilUsuarioEntity userProfile = perfilUsuarioRepository.findById(idProfile.longValue()).orElse(null);\r\n                ResponseEntity<PerfilUsuario> respuesta = new ResponseEntity<PerfilUsuario>(PerfilUsuarioMapper.toModel(userProfile) ,HttpStatus.ACCEPTED);\r\n                perfilUsuarioRepository.deleteById(idProfile.longValue());\r\n\r\n                return respuesta;\r\n            } catch (Exception e) {\r\n                log.error(\"Couldn't serialize response for content type application/json\", e);\r\n                return new ResponseEntity<PerfilUsuario>(HttpStatus.INTERNAL_SERVER_ERROR);\r\n            }\r\n        }\r\n        return new ResponseEntity<PerfilUsuario>(HttpStatus.NOT_IMPLEMENTED);\r\n    }\r\n\r\n    public ResponseEntity<List<PerfilUsuario>> getAllUserProfileById(\r\n@Parameter(in = ParameterIn.COOKIE, description = \"\" ,required=true,schema=@Schema()) @CookieValue(value=\"SessionUserCookie\", required=true) User sessionUserCookie) {\r\n        String accept = request.getHeader(\"Accept\");\r\n        if (accept != null && accept.contains(\"application/json\")) {\r\n            try {\r\n                return new ResponseEntity<List<PerfilUsuario>>(objectMapper.readValue(\"[ {\\n  \\\"Pin\\\" : \\\"1234\\\",\\n  \\\"id-usuario\\\" : 1,\\n  \\\"id-perfil\\\" : 1,\\n  \\\"Nombre-perfil\\\" : \\\"Pablito\\\"\\n}, {\\n  \\\"Pin\\\" : \\\"1234\\\",\\n  \\\"id-usuario\\\" : 1,\\n  \\\"id-perfil\\\" : 1,\\n  \\\"Nombre-perfil\\\" : \\\"Pablito\\\"\\n} ]\", List.class), HttpStatus.NOT_IMPLEMENTED);\r\n            } catch (IOException e) {\r\n                log.error(\"Couldn't serialize response for content type application/json\", e);\r\n                return new ResponseEntity<List<PerfilUsuario>>(HttpStatus.INTERNAL_SERVER_ERROR);\r\n            }\r\n        }\r\n\r\n        return new ResponseEntity<List<PerfilUsuario>>(HttpStatus.NOT_IMPLEMENTED);\r\n    }\r\n\r\n    public ResponseEntity<PerfilUsuario> getUserProfileById(@Parameter(in = ParameterIn.PATH, description = \"El id del perfil de usuario que se desea buscar.\", required=true, schema=@Schema()) @PathVariable(\"idProfile\") Long idProfile\r\n        , @Parameter(in = ParameterIn.COOKIE, description = \"\" ,required=true,schema=@Schema()) @CookieValue(value=\"SessionUserCookie\", required=true) User sessionUserCookie) {\r\n        String accept = request.getHeader(\"Accept\");\r\n        if (accept != null && accept.contains(\"application/json\")) {\r\n            try {\r\n                return new ResponseEntity<PerfilUsuario>(PerfilUsuarioMapper.toModel(perfilUsuarioRepository.findById(idProfile.longValue()).orElse(null)), HttpStatus.ACCEPTED);\r\n            } catch (Exception e) {\r\n                log.error(\"Couldn't serialize response for content type application/json\", e);\r\n                return new ResponseEntity<PerfilUsuario>(HttpStatus.INTERNAL_SERVER_ERROR);\r\n            }\r\n        }\r\n        return new ResponseEntity<PerfilUsuario>(HttpStatus.NOT_IMPLEMENTED);\r\n    }\r\n\r\n    public ResponseEntity<PerfilUsuario> postUserProfile(@Parameter(in = ParameterIn.DEFAULT, description = \"\", schema=@Schema()) @Valid @RequestBody PerfilUsuario body\r\n) {\r\n        String accept = request.getHeader(\"Accept\");\r\n        if (accept != null && accept.contains(\"application/json\")) {\r\n            try {\r\n                perfilUsuarioRepository.save(PerfilUsuarioMapper.toEntity(body));\r\n                return new ResponseEntity<PerfilUsuario>(body, HttpStatus.CREATED);\r\n            } catch (Exception e) {\r\n                log.error(\"Couldn't serialize response for content type application/json\", e);\r\n                return new ResponseEntity<PerfilUsuario>(HttpStatus.INTERNAL_SERVER_ERROR);\r\n            }\r\n        }\r\n\r\n        return new ResponseEntity<PerfilUsuario>(HttpStatus.NOT_IMPLEMENTED);\r\n    }\r\n\r\n    public ResponseEntity<PerfilUsuario> putUserProfileById(@Parameter(in = ParameterIn.PATH, description = \"El id del perfil de usuario que se desea eliminar.\", required=true, schema=@Schema()) @PathVariable(\"idProfile\") Long idProfile\r\n,\r\n@Parameter(in = ParameterIn.COOKIE, description = \"\" ,required=true,schema=@Schema()) @CookieValue(value=\"SessionUserCookie\", required=true) User sessionUserCookie,@Parameter(in = ParameterIn.DEFAULT, description = \"\", schema=@Schema()) @Valid @RequestBody PerfilUsuario body\r\n) {\r\n    String accept = request.getHeader(\"Accept\");\r\n    if (accept != null && accept.contains(\"application/json\")) {\r\n        try {\r\n            perfilUsuarioRepository.deleteById(body.getIdPerfil().longValue());\r\n            perfilUsuarioRepository.save(PerfilUsuarioMapper.toEntity(body));\r\n            return new ResponseEntity<PerfilUsuario>(body, HttpStatus.ACCEPTED);\r\n        } catch (Exception e) {\r\n            log.error(\"Couldn't serialize response for content type application/json\", e);\r\n            return new ResponseEntity<PerfilUsuario>(HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n    }\r\n\r\n    return new ResponseEntity<PerfilUsuario>(HttpStatus.NOT_IMPLEMENTED);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/es/unex/swagger/api/ProfilesApiController.java b/src/main/java/es/unex/swagger/api/ProfilesApiController.java
--- a/src/main/java/es/unex/swagger/api/ProfilesApiController.java	(revision 40a2c48ad974cd55df6210d278d9b265115fab73)
+++ b/src/main/java/es/unex/swagger/api/ProfilesApiController.java	(date 1730911302960)
@@ -44,7 +44,7 @@
 @RestController
 public class ProfilesApiController implements ProfilesApi {
 
-    private final PerfilUsuarioMapper perfilUsuarioMapper;
+    /*private final PerfilUsuarioMapper perfilUsuarioMapper;*/
 
     private static final Logger log = LoggerFactory.getLogger(ProfilesApiController.class);
 
